@import '../../globals.scss';
$scroll-size: 6px;
$scroll-padding: 6px;

.container {
  flex-grow: 1;
  width: 100%;
  position: relative;
  overflow: hidden;

  &.verticalScrollVisible {
    padding-right: calc($scroll-padding + $scroll-size);
  }

  &.horizontalScrollVisible {
    padding-bottom: calc($scroll-padding + $scroll-size);
  }
}

.scrollArea {
  height: 100%;
  width: 100%;
  overflow: auto;

  &::-webkit-scrollbar {
    width: 0;
    height: 0;
  }
}

.track {
  display: flex;
  justify-content: flex-end;
  position: absolute;
  background-color: transparent;
  border: 0;
  opacity: 0;
  transition: $transition-duration opacity;

  @media screen and (width > 767px) {
    .container:hover &:not(:hover):not(:active) {
      opacity: 0.5;
    }

    &:hover,
    &:active {
      opacity: 1;
    }
  }

  @media screen and (width <= 767px) {
    pointer-events: none;

    &.showScroll {
      opacity: 0.5;
    }
  }

  &.vertical {
    width: $scroll-size;
    top: 0;
    right: 0;
    bottom: 0;

    &.horizontalScrollVisible {
      bottom: $scroll-size;
    }
  }

  &.horizontal {
    height: $scroll-size;
    left: 0;
    right: 0;
    bottom: 0;
    flex-direction: column;

    &.verticalScrollVisible {
      right: $scroll-size;
    }
  }
}

.thumb {
  background-color: $primary-black;
  border-radius: calc($scroll-size / 2);
  border: 0;
  transition-duration: $transition-duration;

  &.vertical {
    transition-property: width;
    width: 50%;
  }

  &.horizontal {
    transition-property: height;
    height: 50%;
  }

  @media screen and (width > 767px) {
    .track:hover &.vertical,
    .track:active &.vertical {
      width: 100%;
    }

    .track:hover &.horizontal,
    .track:active &.horizontal {
      height: 100%;
    }
  }
}

.shadow {
  position: absolute;
  left: 0;
  right: calc($scroll-padding + $scroll-size);
  height: 34px;
  background: linear-gradient(white 31.47%, rgba(255, 255, 255, 0) 100%);
  pointer-events: none;

  &.top {
    top: 0;
  }

  &.bottom {
    rotate: 180deg;
    bottom: 0;

    &.horizontalScrollVisible {
      bottom: calc($scroll-padding + $scroll-size);
    }
  }
}
